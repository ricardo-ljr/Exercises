package StrategyPattern4;

public class Main {

    public static void main(String[] args) {


        AI ai = new AI(new WinningStrategy(), new LosingStrategy());
        Player player = new Player();
        System.out.println("Let's play rock paper scissors!");

        do {
            String newPlayer = player.playerChoice();
            String newAi = ai.choose();

            if (newPlayer.equals("rock") && newAi.equals("rock")) {
                System.out.println("You and the Computer Both Chose Rock. It's a Tie!");
            } else if (newPlayer.equals("paper") && newAi.equals("paper")) {
                System.out.println("You and the Computer Both Chose Paper. It's a Tie!");

            } else if (newPlayer.equals("scissors") && newAi.equals("scissors")) {
                System.out.println("You and the Computer Both Chose Scissors. It's a Tie!");

            } else if (newPlayer.equals("rock") && newAi.equals("scissors")) {
                System.out.println("You Chose Rock and the Computer Chose Scissors. You Win!");

            } else if (newAi.equals("rock") && newPlayer.equals("scissors")) {
                System.out.println("You Chose Scissors and the Computer Chose Rock. You Lose!");

            } else if (newPlayer.equals("scissors") && newAi.equals("paper")) {
                System.out.println("You Chose Scissors and the Computer Chose Paper. You Win!");

            } else if (newAi.equals("scissors") && newPlayer.equals("paper")) {
                System.out.println("You Chose Paper and the Computer Chose Scissors. You Lose!");

            } else if (newPlayer.equals("paper") && newAi.equals("rock")) {
                System.out.println("You Chose Paper and the Computer Chose Rock. You Win!");

            } else if (newAi.equals("paper") && newPlayer.equals("rock")) {
                System.out.println("You Chose Paper and the Computer Chose Rock. You Lose!");

            } else {
                System.out.println("Invalid Input. Please Re-Enter. ");
                System.out.println();
            }

        } while (!(player.equals("quit")));


    }
}


package StrategyPattern4;

import java.util.Random;

public interface Strategy {

    public String choose();
}

class WinningStrategy implements Strategy {

    @Override
    public String choose() {
        Random randomGenrator = new Random();
        int randomNumber = randomGenrator.nextInt(3);

        String choice = "";
        switch(randomNumber) {
            case 0:
                choice = "rock";
                break;
            case 1:
                choice = "paper";
                break;
            case 2:
                choice = "scissors";
                break;
        }

        return choice;

    }
}

class LosingStrategy implements Strategy {

    @Override
    public String choose() {
        return "rock";
    }
}

package StrategyPattern4;

import java.util.Scanner;

public class Player {

    public String playerChoice() {
        Scanner in = new Scanner(System.in);

        String input = "";

        System.out.println();
        System.out.print("Please Choose Rock Paper or Scissor: ");
        input = in.next();
        String inputLower = input.toLowerCase();

        return inputLower;
    }
}

package StrategyPattern4;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class AI {

    public List<Strategy> strategyList = new ArrayList<>();

    public AI(Strategy winning, Strategy losing) {
        this.strategyList.add(winning);
        this.strategyList.add(losing);
    }

    public void addStrategy(Strategy strategy) { // Can add strategy over time as we think of new strategies
        this.strategyList.add(strategy);
    }

    public String choose() {

        String choice = "";
        Random generateRandom = new Random();
        choice = strategyList.get(generateRandom.nextInt(strategyList.size())).choose();
        System.out.println(choice);

        return choice;
    }

}
